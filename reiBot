import discord
from discord.ext import commands
import os, random

intents = discord.Intents.default()
intents.message_content = True   
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix="", intents=intents, help_command=None)

#Image folders
IMAGE_FOLDER = "images"
IMAGE_FOLDER1 = "bread"
IMAGE_FOLDER2 = "mold"
QUOTES_FILE = "quotes.txt"

WELCOME_CHANNEL_ID = 1138748801331515412 

QUOTES = [
    "BALLS. ‚Äì Rei",
    "I love DEEZ nuts jokes. ‚Äì Rei",
    "I suggest not breathing - Rei",

]


#When bot joins a server
@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user} (ID: {bot.user.id})")
    
#When bot joins a specific channel in the server
@bot.event
async def on_guild_join(guild):
    channel = bot.get_channel(WELCOME_CHANNEL_ID)
    if channel and channel.guild == guild:
        await channel.send("ü§ñ Thanks for adding me to your server! Type `!help` to see what I can do.")
    else:
        print(f"‚ö†Ô∏è Could not find the channel with ID {WELCOME_CHANNEL_ID} in {guild.name}")  

#When bot is mentioned in chat
@bot.event
async def on_message(message):
    if message.author == bot.user:
        return

    # Check if the message is ONLY a mention of the bot
    if message.content.strip() in (f"<@{bot.user.id}>", f"<@!{bot.user.id}>"):
        await message.channel.send("*balls balls balls balls balls balls*")

    # Keep commands working
    await bot.process_commands(message)

#When the !bread is used in chat and goes inside the folder named bread to check if there's an image and pick random image to send
@bot.command()
async def bread(ctx):
    if not os.path.exists(IMAGE_FOLDER1):
        await ctx.send("‚ö†Ô∏è Image folder not found.")
        return

    bread = [f for f in os.listdir(IMAGE_FOLDER1) if os.path.isfile(os.path.join(IMAGE_FOLDER1, f))]
    if not bread:
        await ctx.send("‚ö†Ô∏è No mold found in the folder.")
        return

    chosen = random.choice(bread)
    await ctx.send(file=discord.File(os.path.join(IMAGE_FOLDER1, chosen)))
    

#When !mold is used in chat it goes inside the folder named mold and check if there's an image and pick random image to send
@bot.command()
async def mold(ctx):
    if not os.path.exists(IMAGE_FOLDER2):
        await ctx.send("‚ö†Ô∏è Image folder not found.")
        return
    
    mold = [f for f in os.listdir(IMAGE_FOLDER2) if os.path.isfile(os.path.join(IMAGE_FOLDER2, f))]
    
    if not mold:
        await ctx.send("‚ö†Ô∏è No mold found in the folder.")
        return

    chosen = random.choice(mold)
    await ctx.send(file=discord.File(os.path.join(IMAGE_FOLDER2, chosen)))

#When !bald is used in chat and goes inside the folder named image (I haven't change the folder name) and check if there's an image and pick one randomly to send
@bot.command()  
async def bald(ctx):
    if not os.path.exists(IMAGE_FOLDER):
        await ctx.send("‚ö†Ô∏è Image folder not found.")
        return
    

    images = [f for f in os.listdir(IMAGE_FOLDER) if os.path.isfile(os.path.join(IMAGE_FOLDER, f))]
    
    if not images:
        await ctx.send("‚ö†Ô∏è No images found in the folder.")
        return

    chosen = random.choice(images)
    await ctx.send(file=discord.File(os.path.join(IMAGE_FOLDER, chosen)))

#When !quote is used and goes inside the quote txt file to check if there's a quote and pick one randomly to send
@bot.command()
async def quote(ctx):
    for i in range(1):
        chosen = random.choice(QUOTES)
        await ctx.send(chosen)
        
#Displays when a user sends !tasukite in chat
@bot.command()
async def help(ctx):
    help_message = """
    **Available Commands:**
    `bread` - Sends a random bread image.
    `mold` - Sends a random mold image.
    `bald` - Sends a random bald image.
    `quote` - Sends a random quote.
    `help` - Displays this help message.
    *THIS BOT RUNS ON GLAZOR'S PC SO IF IT IS OFFLINE, THAT'S WHY.*
    """
    await ctx.send(help_message)
    
# Load quotes from file (or use defaults if none)
if os.path.exists(QUOTES_FILE):
    with open(QUOTES_FILE, "r", encoding="utf-8") as f:
        QUOTES = [line.strip() for line in f if line.strip()]
else:
    QUOTES = [
        "BALLS. ‚Äì Rei",
        "I love DEEZ nuts jokes. ‚Äì Rei",
        "I suggest not breathing - Rei",
    ]
    
def save_quotes():
    with open(QUOTES_FILE, "w", encoding="utf-8") as f:
        for q in QUOTES:
            f.write(q + "\n")

@bot.command()
async def addquote(ctx, *, new_quote: str):
    QUOTES.append(new_quote)  # add new quote
    save_quotes()  # save to file
    await ctx.send(f"‚úÖ Quote added: \"{new_quote}\"")
    

    

bot.run("YOUR_BOT_TOKEN") # type: ignore
